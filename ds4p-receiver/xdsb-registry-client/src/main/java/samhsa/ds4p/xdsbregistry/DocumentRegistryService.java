package samhsa.ds4p.xdsbregistry;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import iti.xds_b._2007.XDSRegistry;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.0
 * 2013-03-01T19:41:39.209-07:00
 * Generated source version: 2.6.0
 * 
 */
@WebServiceClient(name = "DocumentRegistryService", 
                  wsdlLocation = "classpath:XDS.b_registry.net.wsdl",
                  targetNamespace = "http://samhsa.gov/ds4p/XDSbRegistry/") 
public class DocumentRegistryService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://samhsa.gov/ds4p/XDSbRegistry/", "DocumentRegistryService");
    public final static QName XDSRegistryHTTPEndpoint = new QName("http://samhsa.gov/ds4p/XDSbRegistry/", "XDSRegistry_HTTP_Endpoint");
    public final static QName XDSRegistryHTTPSEndpoint = new QName("http://samhsa.gov/ds4p/XDSbRegistry/", "XDSRegistry_HTTPS_Endpoint");
    static {
        URL url = DocumentRegistryService.class.getClassLoader().getResource("XDS.b_registry.net.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(DocumentRegistryService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:XDS.b_registry.net.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public DocumentRegistryService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DocumentRegistryService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DocumentRegistryService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns XDSRegistry
     */
    @WebEndpoint(name = "XDSRegistry_HTTP_Endpoint")
    public XDSRegistry getXDSRegistryHTTPEndpoint() {
        return super.getPort(XDSRegistryHTTPEndpoint, XDSRegistry.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XDSRegistry
     */
    @WebEndpoint(name = "XDSRegistry_HTTP_Endpoint")
    public XDSRegistry getXDSRegistryHTTPEndpoint(WebServiceFeature... features) {
        return super.getPort(XDSRegistryHTTPEndpoint, XDSRegistry.class, features);
    }
    /**
     *
     * @return
     *     returns XDSRegistry
     */
    @WebEndpoint(name = "XDSRegistry_HTTPS_Endpoint")
    public XDSRegistry getXDSRegistryHTTPSEndpoint() {
        return super.getPort(XDSRegistryHTTPSEndpoint, XDSRegistry.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XDSRegistry
     */
    @WebEndpoint(name = "XDSRegistry_HTTPS_Endpoint")
    public XDSRegistry getXDSRegistryHTTPSEndpoint(WebServiceFeature... features) {
        return super.getPort(XDSRegistryHTTPSEndpoint, XDSRegistry.class, features);
    }

}
